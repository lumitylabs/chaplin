// prompts/integrator.js
/**
 * Builds a sophisticated prompt for a powerful Integrator AI (e.g., Gemini).
 * This prompt uses high-level concepts like a "Guiding Persona" and "User's Objective"
 * to guide the synthesis of agent outputs into a final, coherent JSON object.
 *
 * - input: The original end-user's query. This is the primary subject.
 * - responseformat: The required JSON schema.
 * - outputs: Raw text from the preceding agents (supporting context).
 * - workgroup: Agent definitions (for context).
 * - description: The overall "personality" and quality standard for the final output.
 * - instructions: The high-level goal of the user's request.
 */
export default function buildHardcodedIntegratorPrompt({
  responseformat,
  outputs,
  workgroup,
  instructions,
  description,
  input
}) {
  const rfPretty = JSON.stringify(responseformat || {}, null, 2);

  const outputsBlock = (outputs || []).map((o, i) => {
    const name = (workgroup?.[i]?.name) ? workgroup[i].name : `Agent ${i}`;
    return `--- Output from Agent "${name}":\n${o}\n`;
  }).join("\n");

  // The prompt structure is a formal directive, establishing a clear hierarchy of information.
  return `# MISSION: Synthesize Agent Intelligence into a Final JSON Product

## 1. Core Subject of the Request
This is the central topic that the final JSON output must address.
- **User Input:** "${input}"

## 2. Guiding Persona & Quality Standard
Your synthesis must embody the spirit and characteristics defined below. This is your primary quality metric.
- **Core Description:** "${description}"

## 3. Overall Objective
The final JSON must fulfill this objective for the user's input.
- **Instructions:** "${instructions}"

## 4. Agent-Generated Context (Supporting Intelligence)
Use the following text generated by specialist agents as a source of ideas, facts, and phrasing. Your primary guide remains the Core Subject and Guiding Persona.
${outputsBlock}

## 5. Blueprint (Required JSON Structure)
You must create a single JSON object that strictly adheres to the following structure. The descriptions for each key explain what content is expected.
\`\`\`json
${rfPretty}
\`\`\`

# FINAL DIRECTIVES
1.  **Prioritize the Core Subject and Guiding Persona.** Your main task is to create a JSON that is a perfect response to the **User Input**, written in the spirit of the **Guiding Persona**. Use the **Agent-Generated Context** as a resource to help you, but do not simply copy it. The final output must be a coherent, high-quality synthesis.
2.  **Strict Schema Adherence:** The final JSON object MUST contain exactly the top-level keys from the "Blueprint". No extra keys, no missing keys.
3.  **Output Purity:** Your entire response MUST be ONLY the single, valid JSON object. Do not include any introductory text, explanations, or markdown code fences (\`\`\`) around the final output.
4.  **Validity is Paramount:** Ensure the JSON is syntactically perfect (correct quotes, no trailing commas).

assistant:
`;
}